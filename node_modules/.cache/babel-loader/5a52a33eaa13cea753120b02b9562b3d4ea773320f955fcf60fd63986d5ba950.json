{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u0440\\u0442\\u0451\\u043C\\\\Documents\\\\coding\\\\Pulse\\\\frontend\\\\src\\\\components\\\\SavedMessagesScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getSavedMessages } from '../services/api';\nimport '../styles/SavedMessagesScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SavedMessagesScreen = ({\n  user\n}) => {\n  _s();\n  const [savedMessages, setSavedMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchSavedMessages = async () => {\n      try {\n        const data = await getSavedMessages(user.telegram_id);\n        setSavedMessages(data);\n        setLoading(false);\n      } catch (err) {\n        setError('Не удалось загрузить сохранённые ответы');\n        setLoading(false);\n      }\n    };\n    fetchSavedMessages();\n  }, [user.telegram_id]);\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString('ru-RU', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"saved-messages-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"saved-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u041C\\u043E\\u0438 \\u0441\\u043E\\u0445\\u0440\\u0430\\u043D\\u0451\\u043D\\u043D\\u044B\\u0435 \\u043E\\u0442\\u0432\\u0435\\u0442\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        children: \"\\u0412\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\\u0441\\u044F \\u043A \\u0447\\u0430\\u0442\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"saved-messages-container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0441\\u043E\\u0445\\u0440\\u0430\\u043D\\u0451\\u043D\\u043D\\u044B\\u0445 \\u043E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this) : savedMessages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-saved-messages\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0423 \\u0432\\u0430\\u0441 \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442 \\u0441\\u043E\\u0445\\u0440\\u0430\\u043D\\u0451\\u043D\\u043D\\u044B\\u0445 \\u043E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/'),\n          children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0440\\u0430\\u0437\\u0433\\u043E\\u0432\\u043E\\u0440\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"saved-messages-list\",\n        children: savedMessages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"saved-message-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"saved-message-date\",\n            children: formatDate(message.created_at)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"saved-message-content\",\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(SavedMessagesScreen, \"Pj5GnumDykrATaZvLFqQrnWzFjY=\", false, function () {\n  return [useNavigate];\n});\n_c = SavedMessagesScreen;\nexport default SavedMessagesScreen;\nvar _c;\n$RefreshReg$(_c, \"SavedMessagesScreen\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","getSavedMessages","jsxDEV","_jsxDEV","SavedMessagesScreen","user","_s","savedMessages","setSavedMessages","loading","setLoading","error","setError","navigate","fetchSavedMessages","data","telegram_id","err","formatDate","dateString","date","Date","toLocaleString","day","month","year","hour","minute","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","message","created_at","content","id","_c","$RefreshReg$"],"sources":["C:/Users/Артём/Documents/coding/Pulse/frontend/src/components/SavedMessagesScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getSavedMessages } from '../services/api';\nimport '../styles/SavedMessagesScreen.css';\n\nconst SavedMessagesScreen = ({ user }) => {\n  const [savedMessages, setSavedMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchSavedMessages = async () => {\n      try {\n        const data = await getSavedMessages(user.telegram_id);\n        setSavedMessages(data);\n        setLoading(false);\n      } catch (err) {\n        setError('Не удалось загрузить сохранённые ответы');\n        setLoading(false);\n      }\n    };\n\n    fetchSavedMessages();\n  }, [user.telegram_id]);\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleString('ru-RU', { \n      day: '2-digit', \n      month: '2-digit', \n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  return (\n    <div className=\"saved-messages-screen\">\n      <div className=\"saved-header\">\n        <h2>Мои сохранённые ответы</h2>\n        <button onClick={() => navigate('/')}>\n          Вернуться к чату\n        </button>\n      </div>\n\n      <div className=\"saved-messages-container\">\n        {loading ? (\n          <div className=\"loading\">Загрузка сохранённых ответов...</div>\n        ) : error ? (\n          <div className=\"error-message\">{error}</div>\n        ) : savedMessages.length === 0 ? (\n          <div className=\"no-saved-messages\">\n            <p>У вас пока нет сохранённых ответов</p>\n            <button onClick={() => navigate('/')}>\n              Начать разговор\n            </button>\n          </div>\n        ) : (\n          <div className=\"saved-messages-list\">\n            {savedMessages.map((message) => (\n              <div key={message.id} className=\"saved-message-card\">\n                <div className=\"saved-message-date\">\n                  {formatDate(message.created_at)}\n                </div>\n                <div className=\"saved-message-content\">\n                  {message.content}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SavedMessagesScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}